available.packages()
a-<available.packages()
a<-available.packages()
head(rownames(a),10)
head(rownames(a),5)
install.packages("slidify")
install.packages("slidify")
find.package("devtools")
install.packages("devtools")
install.packages("slidify", lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
a<-available.packages()
demo()
install.packages("slidify")
install.packages("slidify")
a<-available.packages()
install.packages("slidify")
head(rownames(a), 3)
install.packages("slidify")
library(devtools)
install_github("slidify", "ramnathv")
install.packages("devtools")
install rtools
install.packages("swirl")
install.packages("slidify", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("KernSmooth", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
defaults write org.R-project.R force.LANG en_US.UTF-8
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
install.packages("KernSmooth", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("slidify", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("KernSmooth", lib="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
load("KernSmooth")
library(KernSmooth)
clear
install.packages("swirl")
library(swirl)
swirl()
bye()
install_from_swirl("R Programming")
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1, 9, 3.14)
z<-c(1.1, 9, 3.14)
?c
z
c(z,555,z)
z*2+100
my_srt<-sqrt(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
swirl()
getwd()
ls()
x<-9
play()
ls()
getwd()
nxt()
ls()
list.files()
help(list.files())
help
?list.files
args()
?args()
args(list.files())
args(list.files)
old.dir<-getwd()
mkdir testdir
getwd()
dir.create("testdir")
s
dsd
setwd()
setwd(getwd
)
testdir
wd<-setdir
?directory
?setwd
getwd()
setwd("testdir")
?create
?touch
file.create("mytest.R")
ls()
list.files()
getwd()
file.exists("mytest.R")
?info
info("mytest.R")
file.info("mytest.R")
?rename
?file
file.rename()
?file
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.info("mytest3.R")
file.path("mytest3.R")
dir.create("testdir2/testdir3")
dir.create("testdir2/testdir3",recursive=TRUE)
dir.delete("testdir2")
delete("testdir2")
?dir.delete
?delete
?dir
file.remove("testdir2")
unlink("testdir2",recursive = TRUE)
old.dir
setwd(old.dir)
unlink("testdir")
unlink("testdir",recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char)
c(my_char,"Swirl")
c(my_char,"Vikas")
my_name<-c(my_char,"Vikas")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste("X", "Y", "Z",sep="")
paste(1:3, c("X", "Y", "Z"),sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000);
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
c
c(3,5,7)
sad
asdsad
c
func.replace
help
c(3,5,7)
c(3,5,7)
info()
skip()
x[0]
x[3000]
x[c(2,10)]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","narf")
names(vect2) <-c ("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
open
setwd("/Users/vikasnp/Desktop/Coursera/UCI HAR Dataset")
list()
ls()
source("run_analysis.R")
ls()
?ls
getwd()
?open
source("run_analysis.R")
git
setwd("~/Desktop/Coursera")
source("run_analysis.R"
;
source.with.encoding('~/Desktop/Coursera/UCI HAR Dataset/run_analysis.R', encoding='UTF-8')
ls()
getwd()
source("run_analysis.R")
setwd("~/Desktop/Coursera/UCI HAR Dataset")
setwd
getwd()
ls()
source("run_analysis.R")
which git
git
